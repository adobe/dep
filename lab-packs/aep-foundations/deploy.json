{
	"info": {
		"_postman_id": "ab8f9c1a-09cb-4f66-acc3-da2fd3ecbf08",
		"name": "aep-foundations-bootcamp-deploy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4873115"
	},
	"item": [
		{
			"name": "00 - Auth & Prep",
			"item": [
				{
					"name": "Get OAuth Access Token Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    ",
									"    //debug mode on/off",
									"    if (pm.environment.get(\"TEST_MODE\") == \"false\") {",
									"        postman.setNextRequest(null);",
									"    }",
									"",
									"    pm.response.to.have.status(200);",
									"        ",
									"    var data = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"ACCESS_TOKEN\", data.access_token);",
									"",
									"    //validate access token saved",
									"    pm.test(\"Access token saved\", () => {",
									"        pm.expect(pm.environment.get(\"ACCESS_TOKEN\")).to.not.eql(null);",
									"    });",
									"",
									"    postman.setNextRequest();",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://{{IMS}}/ims/token/v2?grant_type=client_credentials&client_id={{API_KEY}}&client_secret={{CLIENT_SECRET}}&scope={{SCOPES}}",
							"protocol": "https",
							"host": [
								"{{IMS}}"
							],
							"path": [
								"ims",
								"token",
								"v2"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "client_credentials"
								},
								{
									"key": "client_id",
									"value": "{{API_KEY}}"
								},
								{
									"key": "client_secret",
									"value": "{{CLIENT_SECRET}}"
								},
								{
									"key": "scope",
									"value": "{{SCOPES}}"
								}
							]
						},
						"description": "Generate a Oauth token using the Crypto RS256\nSend to IMS for access_token"
					},
					"response": []
				},
				{
					"name": "Gather Tenant ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"cleanup()\r",
									"\r",
									"function cleanup() {\r",
									"    const clean = _.keys(pm.collectionVariables.toObject())\r",
									"    _.each(clean, (arrItem) => {\r",
									"        pm.collectionVariables.unset(arrItem)\r",
									"        pm.collectionVariables.set(arrItem,null)\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    var data = JSON.parse(responseBody);\r",
									"    pm.collectionVariables.set(\"tenant_id\", data.results[0][\"meta:altId\"].split(\".\")[0]);\r",
									"    pm.collectionVariables.set(\"tenant_core_id\", data.results[0][\"meta:altId\"].split(\".\")[0].slice(1));\r",
									"\r",
									"    //Validate variables are set\r",
									"    pm.test(\"Successfully gathered tenant namespace\", () => {\r",
									"        pm.expect(pm.collectionVariables.get(\"tenant_id\")).to.not.eql(null);\r",
									"        pm.expect(pm.collectionVariables.get(\"tenant_core_id\")).to.not.eql(null);\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed-id+json",
								"description": "The desired response format (application/vnd.adobe.xed-full+json)."
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information."
							}
						],
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"schemas"
							]
						},
						"description": "You are able to view a list of all schemas within a container by performing a single GET request. To help filter results, the Schema Registry supports the use of query parameters when listing resources.\n\nThe response format depends on the `Accept` header sent in the request. The following `Accept` headers are available for this request:<ul><li>`application/vnd.adobe.xed-id+json`: Returns a short summary of each resource, generally the preferred header for listing.</li><li>`application/vnd.adobe.xed+json`: Returns full JSON for each resource, with the original `$ref` and `allOf` attributes included.</li></ul>"
					},
					"response": []
				}
			]
		},
		{
			"name": "01 - Identity Service",
			"item": [
				{
					"name": "Create ID Namespace - customerID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"customerID\",\r\n    \"code\": \"customerID\",\r\n    \"idType\": \"CROSS_DEVICE\",\r\n    \"description\": \"dep: Customer ID\"\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/core/idnamespace/identities",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ID Namespace - storeID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"storeID\",\r\n    \"code\": \"storeID\",\r\n    \"idType\": \"NON_PEOPLE\",\r\n    \"description\": \"dep: Store ID\"\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/core/idnamespace/identities",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ID Namespace - productID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"productID\",\r\n    \"code\": \"productID\",\r\n    \"idType\": \"NON_PEOPLE\",\r\n    \"description\": \"dep: Product ID\"\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/core/idnamespace/identities",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ID Namespace  - planID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"planID\",\r\n    \"code\": \"planID\",\r\n    \"idType\": \"NON_PEOPLE\",\r\n    \"description\": \"dep: Plan ID\"\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/core/idnamespace/identities",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//test for successful api response",
							"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,409]);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "02 - XDM Registry",
			"item": [
				{
					"name": "01 - Classes",
					"item": [
						{
							"name": "Create Class - dep: Store [Lookup]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"class_id_dep_store_lookup\";\r",
											"const altid_name = \"class_altid_dep_store_lookup\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);\r",
											"pm.collectionVariables.set(altid_name,data[\"meta:altId\"])   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\":\"{{PREFIX_NAME}}: Store Class\",\r\n    \"description\":\"{{PREFIX_NAME}}: Store Class\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"properties\": {}\r\n        }\r\n    },\r\n    \"allOf\": [\r\n        {\r\n        \"$ref\": \"https://ns.adobe.com/xdm/data/record\"\r\n        },\r\n        {\r\n        \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/classes/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"classes",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//test for successful api response",
									"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
									"    pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "02 - Field Groups",
					"item": [
						{
							"name": "Create FG - dep: Customer ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_customer\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Customer ID\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer ID\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"properties\": {\r\n                        \"customerID\": {\r\n                            \"title\": \"customerID\",\r\n                            \"type\": \"string\",\r\n                            \"isRequired\": false,\r\n                            \"required\": []\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Plan Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_plan_details\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Plan Details\",\r\n    \"description\": \"{{PREFIX_NAME}}: Plan Details\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"plan\": {\r\n                            \"title\": \"Plan Details\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"object\",\r\n                            \"isRequired\": false,\r\n                            \"required\": [],\r\n                            \"properties\": {\r\n                                \"planID\": {\r\n                                    \"title\": \"Plan ID\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\"\r\n                                },\r\n                                \"name\": {\r\n                                    \"title\": \"Plan Name\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\",\r\n                                    \"enum\": [\r\n                                        \"basic\",\r\n                                        \"ultimate\",\r\n                                        \"pro\"\r\n                                    ],\r\n                                    \"meta:enum\": {\r\n                                        \"basic\": \"Basic\",\r\n                                        \"ultimate\": \"Ultimate\",\r\n                                        \"pro\": \"Pro\"\r\n                                    }\r\n                                },\r\n                                \"type\": {\r\n                                    \"title\": \"Plan Type\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\",\r\n                                    \"enum\": [\r\n                                        \"mobile\"\r\n                                    ],\r\n                                    \"meta:enum\": {\r\n                                        \"mobile\": \"Mobile\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Customer Account Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_customer_account_details\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Customer Account Details\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Account Details\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"account\": {\r\n                            \"title\": \"Account Setting Details\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"object\",\r\n                            \"isRequired\": false,\r\n                            \"required\": [],\r\n                            \"properties\": {\r\n                                \"createDate\": {\r\n                                    \"title\": \"Account Create Date\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"format\": \"date-time\",\r\n                                    \"meta:xdmType\": \"date-time\"\r\n                                },\r\n                                \"endDate\": {\r\n                                    \"title\": \"Account End Date\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"format\": \"date-time\",\r\n                                    \"meta:xdmType\": \"date-time\"\r\n                                },\r\n                                \"acqSource\": {\r\n                                    \"title\": \"Account Acquisition Source\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\",\r\n                                    \"enum\": [\r\n                                        \"web\",\r\n                                        \"inStore\"\r\n                                    ],\r\n                                    \"meta:enum\": {\r\n                                        \"web\": \"Web\",\r\n                                        \"inStore\": \"In Store\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Active Line Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_active_line_details\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Active Line Details\",\r\n    \"description\": \"{{PREFIX_NAME}}: Active Line Details\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"activeProducts\": {\r\n                            \"required\": [],\r\n                            \"type\": \"array\",\r\n                            \"description\": \"\",\r\n                            \"meta:xdmType\": \"array\",\r\n                            \"items\": {\r\n                                \"required\": [],\r\n                                \"type\": \"object\",\r\n                                \"meta:xdmType\": \"object\",\r\n                                \"properties\": {\r\n                                    \"make\": {\r\n                                        \"title\": \"Make\",\r\n                                        \"description\": \"\",\r\n                                        \"type\": \"string\",\r\n                                        \"required\": [],\r\n                                        \"meta:xdmType\": \"string\"\r\n                                    },\r\n                                    \"model\": {\r\n                                        \"title\": \"Model\",\r\n                                        \"description\": \"\",\r\n                                        \"type\": \"string\",\r\n                                        \"required\": [],\r\n                                        \"meta:xdmType\": \"string\"\r\n                                    },\r\n                                    \"productID\": {\r\n                                        \"title\": \"Product ID\",\r\n                                        \"description\": \"\",\r\n                                        \"type\": \"string\",\r\n                                        \"required\": [],\r\n                                        \"meta:xdmType\": \"string\"\r\n                                    },\r\n                                    \"customerLineID\": {\r\n                                        \"title\": \"Customer Line ID\",\r\n                                        \"description\": \"\",\r\n                                        \"type\": \"string\",\r\n                                        \"required\": [],\r\n                                        \"meta:xdmType\": \"string\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Aggregates",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_aggregates\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Aggregates\",\r\n    \"description\": \"{{PREFIX_NAME}}: Aggregates\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"aggregates\": {\r\n                            \"title\": \"Aggregates Details\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"object\",\r\n                            \"isRequired\": false,\r\n                            \"required\": [],\r\n                            \"properties\": {\r\n                                \"rollingSixMonthAvgMonthlyDataUsage\": {\r\n                                    \"title\": \"Agg Rolling 6 month Average Monthly Usage\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"number\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"number\"\r\n                                },\r\n                                \"rollingSixMonthTotalDataUsage\": {\r\n                                    \"title\": \"Agg Rolling 6 month Total Data Usage\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"number\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"number\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Store Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_store_details\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Store Details\",\r\n    \"description\": \"{{PREFIX_NAME}}: Store Details\",\r\n    \"meta:intendedToExtend\": [\r\n        \"{{class_id_dep_store_lookup}}\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"storeID\": {\r\n                            \"title\": \"Store ID\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\"\r\n                        },\r\n                        \"name\": {\r\n                            \"title\": \"Store Name\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\"\r\n                        },\r\n                        \"openTime\": {\r\n                            \"title\": \"Store Open Date\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\"\r\n                        },\r\n                        \"closeTime\": {\r\n                            \"title\": \"Store Open Date\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\"\r\n                        },\r\n                        \"inagurationDate\": {\r\n                            \"title\": \"Inaguration Date\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"format\": \"date-time\",\r\n                            \"meta:xdmType\": \"date-time\"\r\n                        },\r\n                        \"address\": {\r\n                            \"$ref\": \"https://ns.adobe.com/xdm/common/address\",\r\n                            \"required\": [],\r\n                            \"type\": \"object\",\r\n                            \"title\": \"address\",\r\n                            \"meta:xdmType\": \"object\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Product Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_product_details\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Product Details\",\r\n    \"description\": \"{{PREFIX_NAME}}: Product Details\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/classes/product\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"productType\": {\r\n                            \"title\": \"Product Type\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\",\r\n                            \"enum\": [\r\n                                \"phone\"\r\n                            ],\r\n                            \"meta:enum\": {\r\n                                \"phone\": \"Phone\"\r\n                            }\r\n                        },\r\n                        \"make\": {\r\n                            \"title\": \"Product Make\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\"\r\n                        },\r\n                        \"model\": {\r\n                            \"title\": \"Product Model\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\"\r\n                        },\r\n                        \"releaseYear\": {\r\n                            \"title\": \"Product Release Year\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\"\r\n                        },\r\n                        \"5gCompatible\": {\r\n                            \"title\": \"Product 5gCompatible Flag\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"boolean\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"boolean\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Plan Metadata",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_plan_metadata\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Plan Metadata\",\r\n    \"description\": \"{{PREFIX_NAME}}: Plan Metadata\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/classes/plan\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"planType\": {\r\n                            \"title\": \"Plan Type\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\",\r\n                            \"enum\": [\r\n                                \"mobile\"\r\n                            ],\r\n                            \"meta:enum\": {\r\n                                \"mobile\": \"Mobile\"\r\n                            }\r\n                        },\r\n                        \"monthlyLineCost\": {\r\n                            \"title\": \"Plan Monthly Line Cost\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"number\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"number\"\r\n                        },\r\n                        \"hasUnlimitedTalk\": {\r\n                            \"title\": \"Plan Has Unlimited Talk\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"boolean\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"boolean\"\r\n                        },\r\n                        \"hasUnlimitedText\": {\r\n                            \"title\": \"Plan Has Unlimited Text\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"boolean\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"boolean\"\r\n                        },\r\n                        \"hasUnlimitedData\": {\r\n                            \"title\": \"Plan Has Unlimited Data\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"boolean\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"boolean\"\r\n                        },\r\n                        \"monthlyDataAllowance\": {\r\n                            \"title\": \"Plan Monthly Data Allowance\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"number\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"number\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Customer Metadata",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_customer_metadata\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Customer Metadata\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Metadata\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"properties\": {\r\n                        \"customerID\": {\r\n                        \"title\": \"customerID\",\r\n                        \"type\": \"string\",\r\n                        \"isRequired\": false,\r\n                        \"required\": []\r\n                        },\r\n                        \"personalEmail\": {\r\n                        \"title\": \"personalEmail\",\r\n                        \"type\": \"string\",\r\n                        \"isRequired\": false,\r\n                        \"required\": []\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Billing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_billing\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Billing\",\r\n    \"description\": \"{{PREFIX_NAME}}: Billing\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"billing\": {\r\n                            \"title\": \"Billing Details\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"object\",\r\n                            \"isRequired\": false,\r\n                            \"required\": [],\r\n                            \"properties\": {\r\n                                \"billingID\": {\r\n                                    \"title\": \"Billing ID\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\"\r\n                                },\r\n                                \"planID\": {\r\n                                    \"title\": \"Plan ID\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\"\r\n                                },\r\n                                \"periodStart\": {\r\n                                    \"title\": \"Billing Period Start\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"format\": \"date-time\",\r\n                                    \"meta:xdmType\": \"date-time\"\r\n                                },\r\n                                \"periodEnd\": {\r\n                                    \"title\": \"Billing Period End\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"format\": \"date-time\",\r\n                                    \"meta:xdmType\": \"date-time\"\r\n                                },\r\n                                \"type\": {\r\n                                    \"title\": \"Billing Type\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\",\r\n                                    \"enum\": [\r\n                                        \"phone\"\r\n                                    ],\r\n                                    \"meta:enum\": {\r\n                                        \"phone\": \"Phone\"\r\n                                    }\r\n                                },\r\n                                \"dataAllowance\": {\r\n                                    \"title\": \"Billing Data Allowance\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"number\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"number\"\r\n                                },\r\n                                \"dataUsage\": {\r\n                                    \"title\": \"Billing Data Usage\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"number\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"number\"\r\n                                },\r\n                                \"total\": {\r\n                                    \"title\": \"Billing Amount Total\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"number\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"number\"\r\n                                },\r\n                                \"billingDetails\": {\r\n                                    \"required\": [],\r\n                                    \"type\": \"array\",\r\n                                    \"description\": \"\",\r\n                                    \"title\": \"Billing Specific Details\",\r\n                                    \"meta:xdmType\": \"array\",\r\n                                    \"items\": {\r\n                                        \"required\": [],\r\n                                        \"type\": \"object\",\r\n                                        \"meta:xdmType\": \"object\",\r\n                                        \"properties\": {\r\n                                            \"amountCharged\": {\r\n                                                \"required\": [],\r\n                                                \"type\": \"number\",\r\n                                                \"description\": \"\",\r\n                                                \"title\": \"Billing Specific Amount Charged\",\r\n                                                \"meta:xdmType\": \"number\"\r\n                                            },\r\n                                            \"phoneNumber\": {\r\n                                                \"required\": [],\r\n                                                \"type\": \"string\",\r\n                                                \"description\": \"\",\r\n                                                \"title\": \"Billing Specific Phone Number\",\r\n                                                \"meta:xdmType\": \"string\"\r\n                                            },\r\n                                            \"customerLineID\": {\r\n                                                \"required\": [],\r\n                                                \"type\": \"string\",\r\n                                                \"description\": \"\",\r\n                                                \"title\": \"Billing Specific Customer Line ID\",\r\n                                                \"meta:xdmType\": \"string\"\r\n                                            },\r\n                                            \"detailStatementID\": {\r\n                                                \"required\": [],\r\n                                                \"type\": \"string\",\r\n                                                \"description\": \"\",\r\n                                                \"title\": \"Billing Specific Statement ID\",\r\n                                                \"meta:xdmType\": \"string\"\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Order Details Extended",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_order_details_extended\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Order Details Extended\",\r\n    \"description\": \"{{PREFIX_NAME}}: Order Details Extended\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent-order-details\",\r\n            \"type\": \"object\",\r\n            \"meta:xdmType\": \"object\"\r\n        },\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\",\r\n            \"type\": \"object\",\r\n            \"meta:xdmType\": \"object\"\r\n        }\r\n    ],\r\n    \"meta:extensible\": true,\r\n    \"meta:abstract\": true,\r\n    \"meta:extends\": [\r\n        \"https://ns.adobe.com/xdm/context/experienceevent-order-details\"\r\n    ],\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"properties\": {\r\n                \"productListItems\": {\r\n                    \"required\": [],\r\n                    \"type\": \"array\",\r\n                    \"description\": \"\",\r\n                    \"meta:xdmType\": \"array\",\r\n                    \"items\": {\r\n                        \"required\": [],\r\n                        \"type\": \"object\",\r\n                        \"meta:xdmType\": \"object\",\r\n                        \"properties\": {\r\n                            \"{{tenant_id}}\": {\r\n                                \"type\": \"object\",\r\n                                \"meta:xdmType\": \"object\",\r\n                                \"properties\": {\r\n                                    \"make\": {\r\n                                        \"title\": \"Make\",\r\n                                        \"description\": \"\",\r\n                                        \"type\": \"string\",\r\n                                        \"required\": [],\r\n                                        \"meta:xdmType\": \"string\"\r\n                                    },\r\n                                    \"model\": {\r\n                                        \"title\": \"Model\",\r\n                                        \"description\": \"\",\r\n                                        \"type\": \"string\",\r\n                                        \"required\": [],\r\n                                        \"meta:xdmType\": \"string\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"order\": {\r\n                    \"type\": \"object\",\r\n                    \"meta:xdmType\": \"object\",\r\n                    \"properties\": {\r\n                        \"{{tenant_id}}\": {\r\n                            \"type\": \"object\",\r\n                            \"meta:xdmType\": \"object\",\r\n                            \"properties\": {\r\n                                \"plan\": {\r\n                                    \"title\": \"Plan Order Details\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"object\",\r\n                                    \"isRequired\": false,\r\n                                    \"required\": [],\r\n                                    \"properties\": {\r\n                                        \"planID\": {\r\n                                            \"title\": \"Plan ID\",\r\n                                            \"description\": \"\",\r\n                                            \"type\": \"string\",\r\n                                            \"required\": [],\r\n                                            \"meta:xdmType\": \"string\"\r\n                                        }\r\n                                    }\r\n                                },\r\n                            \"acqSource\": {\r\n                                    \"title\": \"Acquire Source\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\",\r\n                                    \"enum\": [\r\n                                        \"web\",\r\n                                        \"inStore\"\r\n                                    ],\r\n                                    \"meta:enum\": {\r\n                                        \"web\": \"Web\",\r\n                                        \"inStore\": \"In Store\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Ecommerce Details Extended",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_ecommerce_details_extended\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Ecommerce Details Extended\",\r\n    \"description\": \"{{PREFIX_NAME}}: Ecommerce Details Extended\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent-order-details\",\r\n            \"type\": \"object\",\r\n            \"meta:xdmType\": \"object\"\r\n        },\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\",\r\n            \"type\": \"object\",\r\n            \"meta:xdmType\": \"object\"\r\n        }\r\n    ],\r\n    \"meta:extensible\": true,\r\n    \"meta:abstract\": true,\r\n    \"meta:extends\": [\r\n        \"https://ns.adobe.com/xdm/context/experienceevent-order-details\"\r\n    ],\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"properties\": {\r\n                \"productListItems\": {\r\n                    \"required\": [],\r\n                    \"type\": \"array\",\r\n                    \"description\": \"\",\r\n                    \"meta:xdmType\": \"array\",\r\n                    \"items\": {\r\n                        \"required\": [],\r\n                        \"type\": \"object\",\r\n                        \"meta:xdmType\": \"object\",\r\n                        \"properties\": {\r\n                            \"{{tenant_id}}\": {\r\n                                \"type\": \"object\",\r\n                                \"meta:xdmType\": \"object\",\r\n                                \"properties\": {\r\n                                    \"model\": {\r\n                                        \"title\": \"Model\",\r\n                                        \"description\": \"\",\r\n                                        \"type\": \"string\",\r\n                                        \"required\": [],\r\n                                        \"meta:xdmType\": \"string\"\r\n                                    },\r\n                                    \"make\": {\r\n                                        \"title\": \"Make\",\r\n                                        \"description\": \"\",\r\n                                        \"type\": \"string\",\r\n                                        \"required\": [],\r\n                                        \"meta:xdmType\": \"string\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"meta:xdmType\": \"object\",\r\n                    \"properties\": {\r\n                        \"acqSource\": {\r\n                            \"title\": \"Acquire Source\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"string\",\r\n                            \"required\": [],\r\n                            \"meta:xdmType\": \"string\",\r\n                            \"enum\": [\r\n                                \"web\",\r\n                                \"inStore\"\r\n                            ],\r\n                            \"meta:enum\": {\r\n                                \"web\": \"Web\",\r\n                                \"inStore\": \"In Store\"\r\n                            }\r\n                        }\r\n                    }\r\n                }        \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create FG - dep: Web",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"fg_id_dep_web\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"]);   \r",
											"\r",
											"//test for collection variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Web\",\r\n    \"description\": \"{{PREFIX_NAME}}: Web\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{tenant_id}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"webDetailsEE\": {\r\n                            \"title\": \"Web Details EE\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"object\",\r\n                            \"isRequired\": false,\r\n                            \"required\": [],\r\n                            \"properties\": {\r\n                                \"customTag\": {\r\n                                    \"title\": \"Custom Tag\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//test for successful api response",
									"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
									"    pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "03 - Schemas",
					"item": [
						{
							"name": "Create Schema - dep: Customer Account",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_customer_account\";\r",
											"const altid_name = \"schema_altid_dep_customer_account\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Customer Account\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Account\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile-person-details\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile-personal-details\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/mixins/profile-consents\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_customer}}\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_plan_details}}\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_customer_account_details}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Customer Active Lines",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_customer_active_lines\";\r",
											"const altid_name = \"schema_altid_dep_customer_active_lines\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Customer Active Lines\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Active Lines\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_customer}}\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_active_line_details}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Customer Aggregates",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_customer_aggregates\";\r",
											"const altid_name = \"schema_altid_dep_customer_aggregates\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Customer Aggregates\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Aggregates\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_customer}}\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_aggregates}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Billing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_billing\";\r",
											"const altid_name = \"schema_altid_dep_billing\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Billing\",\r\n    \"description\": \"{{PREFIX_NAME}}: Billing\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_customer_metadata}}\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_billing}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Orders",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_orders\";\r",
											"const altid_name = \"schema_altid_dep_orders\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Orders\",\r\n    \"description\": \"{{PREFIX_NAME}}: Orders\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent-order-details\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_customer_metadata}}\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_order_details_extended}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Ecommerce",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_ecommerce\";\r",
											"const altid_name = \"schema_altid_dep_ecommerce\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Ecommerce\",\r\n    \"description\": \"{{PREFIX_NAME}}: Ecommerce\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent-order-details\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_customer_metadata}}\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_ecommerce_details_extended}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Web",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_web\";\r",
											"const altid_name = \"schema_altid_dep_web\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Web\",\r\n    \"description\": \"{{PREFIX_NAME}}: Web\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/experienceevent\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/experience/aep-web-sdk-experienceevent\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Store [Lookup]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_store_lookup\";\r",
											"const altid_name = \"schema_altid_dep_store_lookup\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Store [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: Store [Lookup]\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"{{class_id_dep_store_lookup}}\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_store_details}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Product [Lookup]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_product_lookup\";\r",
											"const altid_name = \"schema_altid_dep_product_lookup\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Product [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: Product [Lookup]\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/classes/product\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_product_details}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Schema - dep: Plan [Lookup]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable names\r",
											"const id_name = \"schema_id_dep_plan_lookup\";\r",
											"const altid_name = \"schema_altid_dep_plan_lookup\";\r",
											"\r",
											"//store collection variable\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_name, data[\"$id\"])\r",
											"pm.collectionVariables.set(altid_name, data[\"meta:altId\"]);  \r",
											"\r",
											"//test for schema id variable\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"//test for schema altid variable\r",
											"pm.test(\"Collection variable '\" + altid_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(altid_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{PREFIX_NAME}}: Plan [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: Plan [Lookup]\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/classes/plan\"\r\n        },\r\n        {\r\n            \"$ref\": \"{{fg_id_dep_plan_metadata}}\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//test for successful api response",
									"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
									"    pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "04 - Descriptors",
					"item": [
						{
							"name": "Identity Descriptors",
							"item": [
								{
									"name": "Create Primary ID - dep: Customer Account",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_customer_account}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/customerID\",\r\n  \"xdm:namespace\": \"customerID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create ID - dep: Customer Account",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_customer_account}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/personalEmail/address\",\r\n  \"xdm:namespace\": \"Email\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": false\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create Primary ID - dep: Customer Active Lines",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_customer_active_lines}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/customerID\",\r\n  \"xdm:namespace\": \"customerID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create ID - dep: Customer Aggregates",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_customer_aggregates}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/customerID\",\r\n  \"xdm:namespace\": \"customerID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create Primary ID - dep: Billing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_billing}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/customerID\",\r\n  \"xdm:namespace\": \"customerID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create Primary ID - dep: Orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_orders}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/personalEmail\",\r\n  \"xdm:namespace\": \"Email\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create ID - dep: Orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_orders}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/customerID\",\r\n  \"xdm:namespace\": \"customerID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": false\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create Primary ID - dep: Ecommerce",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_ecommerce}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/personalEmail\",\r\n  \"xdm:namespace\": \"Email\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create ID - dep: Ecommerce",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_ecommerce}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/customerID\",\r\n  \"xdm:namespace\": \"customerID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": false\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create Primary ID - dep: Store [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_store_lookup}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/storeID\",\r\n  \"xdm:namespace\": \"storeID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create Primary ID - dep: Product [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_product_lookup}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/productID\",\r\n  \"xdm:namespace\": \"productID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create ID - dep: Plan [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_plan_lookup}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/planID\",\r\n  \"xdm:namespace\": \"planID\",\r\n  \"xdm:property\": \"xdm:code\",\r\n  \"xdm:isPrimary\": true\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								}
							]
						},
						{
							"name": "Relationship Descriptors",
							"item": [
								{
									"name": "Create RD - dep: Orders -> Store [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorOneToOne\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_orders}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/store/storeID\",\r\n  \"xdm:destinationSchema\": \"{{schema_id_dep_store_lookup}}\",\r\n  \"xdm:destinationVersion\": 1,\r\n  \"xdm:destinationProperty\": \"/{{tenant_id}}/storeID\"\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RD - dep: Orders --> Product [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Product [L] relationship descriptor created for Orders [E] schema\", () => {\r",
													"    //debug mode on/off\r",
													"    if (pm.environment.get(\"TEST_MODE\") == \"false\") {\r",
													"        postman.setNextRequest(null);\r",
													"    }\r",
													"\r",
													"    pm.response.to.have.status(201);\r",
													"    postman.setNextRequest();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorOneToOne\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_orders}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/productListItems[*]/SKU\",\r\n  \"xdm:destinationSchema\": \"{{schema_id_dep_product_lookup}}\",\r\n  \"xdm:destinationVersion\": 1,\r\n  \"xdm:destinationProperty\": \"/productID\"\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RD - dep: Customer Active Lines --> Product [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorOneToOne\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_customer_active_lines}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/activeProducts[*]/productID\",\r\n  \"xdm:destinationSchema\": \"{{schema_id_dep_product_lookup}}\",\r\n  \"xdm:destinationVersion\": 1,\r\n  \"xdm:destinationProperty\": \"/productID\"\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RD - dep: Billing --> dep: Plan [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorOneToOne\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_billing}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/billing/planID\",\r\n  \"xdm:destinationSchema\": \"{{schema_id_dep_plan_lookup}}\",\r\n  \"xdm:destinationVersion\": 1,\r\n  \"xdm:destinationProperty\": \"/planID\"\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RD - dep: Customer Account --> dep: Plan [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorOneToOne\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_customer_account}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/plan/planID\",\r\n  \"xdm:destinationSchema\": \"{{schema_id_dep_plan_lookup}}\",\r\n  \"xdm:destinationVersion\": 1,\r\n  \"xdm:destinationProperty\": \"/planID\"\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RD - dep: Orders --> dep: Plan [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorOneToOne\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_orders}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/order/{{tenant_id}}/plan/planID\",\r\n  \"xdm:destinationSchema\": \"{{schema_id_dep_plan_lookup}}\",\r\n  \"xdm:destinationVersion\": 1,\r\n  \"xdm:destinationProperty\": \"/planID\"\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								}
							]
						},
						{
							"name": "Reference Identity Descriptors",
							"item": [
								{
									"name": "Create RID - dep: Customer Account --> planID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorReferenceIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_customer_account}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/plan/planID\",\r\n  \"xdm:identityNamespace\": \"planID\"\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RID - dep: Customer Active Lines --> productID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorReferenceIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_customer_active_lines}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/activeProducts[*]/productID\",\r\n  \"xdm:identityNamespace\": \"productID\"\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RID - dep: Orders --> planID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorReferenceIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_orders}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/order/{{tenant_id}}/plan/planID\",\r\n  \"xdm:identityNamespace\": \"planID\"\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RID - dep: Orders --> storeID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorReferenceIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_orders}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/store/storeID\",\r\n  \"xdm:identityNamespace\": \"storeID\"\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RID - dep: Orders --> productID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorReferenceIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_orders}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/productListItems[*]/SKU\",\r\n  \"xdm:identityNamespace\": \"productID\"\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								},
								{
									"name": "Create RID - dep: Billing --> planID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:descriptorReferenceIdentity\",\r\n  \"xdm:sourceSchema\": \"{{schema_id_dep_billing}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/{{tenant_id}}/billing/planID\",\r\n  \"xdm:identityNamespace\": \"planID\"\r\n}\r\n"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors"
											]
										},
										"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
									},
									"response": []
								}
							]
						},
						{
							"name": "Friendly Name Descriptors",
							"item": [
								{
									"name": "Create FND - dep: Orders --> eventType",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var getaltid = pm.collectionVariables.get(\"schema_altid_dep_orders\");",
													"var shortValList = getaltid.split(\".\");",
													"pm.variables.set(\"short_schema_meta_altid\", shortValList[2]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:alternateDisplayInfo\",\r\n  \"xdm:sourceSchema\": \"https://ns.adobe.com/{{tenant_core_id}}/schemas/{{short_schema_meta_altid}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/eventType\",\r\n  \"xdm:title\": {\r\n    \"en_us\": \"Event Type\"\r\n  },\r\n  \"xdm:description\": {\r\n    \"en_us\": \"The type of experience event detected by the system.\"\r\n  },\r\n  \"meta:enum\": {\r\n    \"orders.placed\": \"Order Placed\",\r\n    \"orders.cancelled\": \"Order Cancelled\",\r\n    \"orders.readyForPickup\": \"Order Ready For Pickup\",\r\n    \"orders.pickedUp\": \"Order Picked Up\",\r\n    \"orders.shipped\": \"Order Shipped\",\r\n    \"orders.delivered\": \"Order Delivered\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors/",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Create FND - dep: Plan [Lookup] --> planName",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var getaltid = pm.collectionVariables.get(\"schema_altid_dep_plan_lookup\");",
													"var shortValList = getaltid.split(\".\");",
													"pm.variables.set(\"short_schema_meta_altid\", shortValList[2]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:alternateDisplayInfo\",\r\n  \"xdm:sourceSchema\": \"https://ns.adobe.com/{{tenant_core_id}}/schemas/{{short_schema_meta_altid}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/planName\",\r\n  \"xdm:title\": {\r\n    \"en_us\": \"Plan Name\"\r\n  },\r\n  \"xdm:description\": {\r\n    \"en_us\": \"The types of Plans\"\r\n  },\r\n  \"meta:enum\": {\r\n    \"basic\": \"Basic\",\r\n    \"ultimate\": \"Ultimate\",\r\n    \"pro\": \"Pro\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors/",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Create FND - dep: Billing --> eventType",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var getaltid = pm.collectionVariables.get(\"schema_altid_dep_billing\");",
													"var shortValList = getaltid.split(\".\");",
													"pm.variables.set(\"short_schema_meta_altid\", shortValList[2]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@type\": \"xdm:alternateDisplayInfo\",\r\n  \"xdm:sourceSchema\": \"https://ns.adobe.com/{{tenant_core_id}}/schemas/{{short_schema_meta_altid}}\",\r\n  \"xdm:sourceVersion\": 1,\r\n  \"xdm:sourceProperty\": \"/eventType\",\r\n  \"xdm:title\": {\r\n    \"en_us\": \"Event Type\"\r\n  },\r\n  \"xdm:description\": {\r\n    \"en_us\": \"The type of experience event detected by the system.\"\r\n  },\r\n  \"meta:enum\": {\r\n    \"billing.statement\": \"Billing Statement\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/descriptors/",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"descriptors",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//test for successful api response",
									"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
									"    pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "05 - Enable Schemas for Profile",
					"item": [
						{
							"name": "Patch Schema for Profile - dep: Customer Account",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_customer_account}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Customer Active Lines",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_customer_active_lines}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Customer Aggregates",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_customer_aggregates}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Billing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_billing}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Orders",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_orders}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Ecommerce",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_ecommerce}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Web",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_web}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Store [Lookup]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_store_lookup}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Product [Lookup]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_product_lookup}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Patch Schema for Profile - dep: Plan [Lookup]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\""
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/schemaregistry/:CONTAINER_ID/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "tenant"
										},
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{schema_altid_dep_plan_lookup}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//test for successful api response",
									"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "03 - Catalog",
			"item": [
				{
					"name": "Create Dataset - dep: Customer Account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_customer_account\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Customer Account\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Account\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_customer_account}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Customer Active Lines",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_customer_active_lines\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Customer Active Lines\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Active Lines\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_customer_active_lines}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Customer Aggregates",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_customer_aggregates\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Customer Aggregates\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Aggregates\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_customer_aggregates}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Billing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_billing\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Billing\",\r\n    \"description\": \"{{PREFIX_NAME}}: Billing\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_billing}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Orders",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_orders\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Orders\",\r\n    \"description\": \"{{PREFIX_NAME}}: Orders\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_orders}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Ecommerce",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_ecommerce\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Ecommerce\",\r\n    \"description\": \"{{PREFIX_NAME}}: Ecommerce\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_ecommerce}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Web",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_web\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Web\",\r\n    \"description\": \"{{PREFIX_NAME}}: Web\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_web}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Store [Lookup]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_store_lookup\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Store [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: Store [Lookup]\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_store_lookup}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Product [Lookup]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_product_lookup\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Product [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: Product [Lookup]\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_product_lookup}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dataset - dep: Plan [Lookup]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//set variable id_name\r",
									"const id_name = \"dataset_id_dep_plan_lookup\";\r",
									"\r",
									"//store collection variable\r",
									"var data = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(id_name, data[0].substring(11, data[0].length));\r",
									"\r",
									"//test for dataset id variable\r",
									"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
									"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Plan [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: Plan [Lookup]\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{schema_id_dep_plan_lookup}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    },\r\n    \"tags\": {\r\n        \"unifiedProfile\": [\r\n            \"enabled:true\"\r\n        ],\r\n        \"unifiedIdentity\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/catalog/dataSets",
							"protocol": "https",
							"host": [
								"{{ADOBE_IO_ENV}}"
							],
							"path": [
								"data",
								"foundation",
								"catalog",
								"dataSets"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//test for successful api response",
							"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
							"    pm.response.to.have.status(201);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "04 - Flow Service",
			"item": [
				{
					"name": "HTTP API",
					"item": [
						{
							"name": "01 - Account",
							"item": [
								{
									"name": "Create Account - HTTP API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_account_id_http_api\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API [raw]\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API [raw]\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"auth\": {\r\n        \"specName\": \"Streaming Connection\",\r\n            \"params\": {\r\n                \"dataType\": \"raw\"\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/connections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connections"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "02 - Source Connections",
							"item": [
								{
									"name": "Create SC - HTTP API - dep: Customer Accounts",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_cus_acc\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Acccounts\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Acccounts\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Customer Active Lines",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_cus_act_lines\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Active Lines\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Active Lines\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Customer Aggregates",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_cus_agg\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Aggregates\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Aggregates\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Billing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_billing\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Billing\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Billing\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_orders\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Orders\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Orders\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Ecommerce",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_ecommerce\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Ecommerce\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Ecommerce\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Web",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_web\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Web\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Web\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Store [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_store_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Store [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Store [Lookup]\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Plan [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_plan_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Plan [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Plan [Lookup]\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SC - HTTP API - dep: Product [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_conn_id_http_api_dep_product_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Product [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Product [Lookup]\",\r\n    \"baseConnectionId\": \"{{source_account_id_http_api}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "03 - Target Connections",
							"item": [
								{
									"name": "Create TC - HTTP API - dep: Customer Accounts",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_cus_acc\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Accounts\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Accounts\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_customer_account}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_customer_account}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Customer Active Lines",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_cus_act_lines\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Active Lines\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Active Lines\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_customer_active_lines}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_customer_active_lines}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Customer Aggregates",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_cus_agg\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Aggregates\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Customer Aggregates\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_customer_aggregates}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_customer_aggregates}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Billing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_billing\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Billing\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Billing\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_billing}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_billing}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_orders\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Orders\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Orders\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_orders}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_orders}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Ecommerce",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_ecommerce\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Ecommerce\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Ecommerce\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_ecommerce}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_ecommerce}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Web",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_web\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Web\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Web\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_web}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_web}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Store [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_store_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Store [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Store [Lookup]\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_store_lookup}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_store_lookup}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Plan [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_plan_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Plan [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Plan [Lookup]\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_plan_lookup}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_plan_lookup}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TC - HTTP API - dep: Product [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"target_conn_id_http_api_dep_product_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Product [Lookup]\",\r\n    \"description\": \"{{PREFIX_NAME}}: HTTP API - {{PREFIX_NAME}}: Product [Lookup]\",\r\n      \"data\": {\r\n          \"schema\": {\r\n              \"id\": \"{{schema_id_dep_product_lookup}}\",\r\n              \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n          }\r\n      },\r\n      \"params\": {\r\n          \"dataSetId\": \"{{dataset_id_dep_product_lookup}}\"\r\n      },\r\n          \"connectionSpec\": {\r\n          \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n          \"version\": \"1.0\"\r\n      }\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "04 - Mapping Sets",
							"item": [
								{
									"name": "Create MS - HTTP API - dep: Customer Accounts",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_cus_acc\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_customer_account}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.aep-xl\",\r\n            \"source\": \"date_part(\\\"yyyy\\\",date(birth_Date))\",\r\n            \"destination\": \"person.birthYear\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.aep-xl\",\r\n            \"source\": \"iif( sms_optIn == null,'n',sms_optIn )\",\r\n            \"destination\": \"consents.marketing.sms.val\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.aep-xl\",\r\n            \"source\": \"concat(date_part(\\\"mm\\\", date(birth_Date)).toString(),\\n   \\\"-\\\", date_part(\\\"dd\\\", date(birth_Date)).toString())\",\r\n            \"destination\": \"person.birthDayAndMonth\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"createDate\",\r\n            \"destination\": \"_repo.createDate\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"modifyDate\",\r\n            \"destination\": \"_repo.modifyDate\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"firstName\",\r\n            \"destination\": \"person.name.firstName\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"lastName\",\r\n            \"destination\": \"person.name.lastName\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"email\",\r\n            \"destination\": \"personalEmail.address\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"mobile_phone\",\r\n            \"destination\": \"mobilePhone.number\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"email_optIn\",\r\n            \"destination\": \"consents.marketing.email.val\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"customer_id\",\r\n            \"destination\": \"{{tenant_id}}.customerID\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"shipping_street_address\",\r\n            \"destination\": \"shippingAddress.street1\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"shipping_city\",\r\n            \"destination\": \"shippingAddress.city\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"shipping_state\",\r\n            \"destination\": \"shippingAddress.state\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"shipping_zip_code\",\r\n            \"destination\": \"shippingAddress.postalCode\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"billing_street_address\",\r\n            \"destination\": \"billingAddress.street1\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"billing_city\",\r\n            \"destination\": \"billingAddress.city\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"billing_state\",\r\n            \"destination\": \"billingAddress.state\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"billing_zip_code\",\r\n            \"destination\": \"billingAddress.postalCode\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"plan_id\",\r\n            \"destination\": \"{{tenant_id}}.plan.planID\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"plan_name\",\r\n            \"destination\": \"{{tenant_id}}.plan.name\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"plan_type\",\r\n            \"destination\": \"{{tenant_id}}.plan.type\"\r\n        },        \r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"account_create_date\",\r\n            \"destination\": \"{{tenant_id}}.account.createDate\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"account_end_date\",\r\n            \"destination\": \"{{tenant_id}}.account.endDate\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"source\",\r\n            \"destination\": \"{{tenant_id}}.account.acqSource\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Customer Active Lines",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_cus_act_lines\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_customer_active_lines}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_dxp\",\r\n            \"destination\": \"{{tenant_id}}\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Customer Aggregates",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_cus_agg\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_customer_aggregates}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_dxp\",\r\n            \"destination\": \"{{tenant_id}}\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Billing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_billing\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_billing}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_id\",\r\n            \"destination\": \"_id\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"eventType\",\r\n            \"destination\": \"eventType\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"timestamp\",\r\n            \"destination\": \"timestamp\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_dxp\",\r\n            \"destination\": \"{{tenant_id}}\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_orders\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_orders}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*].SKU\",\r\n            \"destination\": \"productListItems[*].SKU\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*]._dxp.make\",\r\n            \"destination\": \"productListItems[*].{{tenant_id}}.make\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"order._dxp\",\r\n            \"destination\": \"order.{{tenant_id}}\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*]._id\",\r\n            \"destination\": \"productListItems[*]._id\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"order.priceTotal\",\r\n            \"destination\": \"order.priceTotal\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*]._dxp.model\",\r\n            \"destination\": \"productListItems[*].{{tenant_id}}.model\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"eventType\",\r\n            \"destination\": \"eventType\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"order.orderDate\",\r\n            \"destination\": \"order.orderDate\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"order.orderID\",\r\n            \"destination\": \"order.orderID\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"shipping\",\r\n            \"destination\": \"shipping\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*].currencyCode\",\r\n            \"destination\": \"productListItems[*].currencyCode\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*].priceTotal\",\r\n            \"destination\": \"productListItems[*].priceTotal\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"timestamp\",\r\n            \"destination\": \"timestamp\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"billing\",\r\n            \"destination\": \"billing\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"store\",\r\n            \"destination\": \"store\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_id\",\r\n            \"destination\": \"_id\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"order.payment\",\r\n            \"destination\": \"order.payment\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_dxp\",\r\n            \"destination\": \"{{tenant_id}}\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*].quantity\",\r\n            \"destination\": \"productListItems[*].quantity\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Ecommerce",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_ecommerce\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_ecommerce}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*].SKU\",\r\n            \"destination\": \"productListItems[*].SKU\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*]._dxp.make\",\r\n            \"destination\": \"productListItems[*].{{tenant_id}}.make\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*]._id\",\r\n            \"destination\": \"productListItems[*]._id\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"order.priceTotal\",\r\n            \"destination\": \"order.priceTotal\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*]._dxp.model\",\r\n            \"destination\": \"productListItems[*].{{tenant_id}}.model\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"eventType\",\r\n            \"destination\": \"eventType\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"order.orderDate\",\r\n            \"destination\": \"order.orderDate\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"order.orderID\",\r\n            \"destination\": \"order.orderID\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"shipping\",\r\n            \"destination\": \"shipping\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*].currencyCode\",\r\n            \"destination\": \"productListItems[*].currencyCode\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*].priceTotal\",\r\n            \"destination\": \"productListItems[*].priceTotal\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"timestamp\",\r\n            \"destination\": \"timestamp\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_id\",\r\n            \"destination\": \"_id\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_dxp\",\r\n            \"destination\": \"{{tenant_id}}\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListItems[*].quantity\",\r\n            \"destination\": \"productListItems[*].quantity\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Web",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_web\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_web}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"timestamp\",\r\n            \"destination\": \"timestamp\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"web\",\r\n            \"destination\": \"web\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_id\",\r\n            \"destination\": \"_id\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"identityMap\",\r\n            \"destination\": \"identityMap\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Store [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_store_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_store_lookup}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"tenant\",\r\n            \"destination\": \"{{tenant_id}}\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Plan [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_plan_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_plan_lookup}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"tenant\",\r\n            \"destination\": \"{{tenant_id}}\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"planName\",\r\n            \"destination\": \"planName\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"planID\",\r\n            \"destination\": \"planID\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Create MS - HTTP API - dep: Product [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"map_set_id_http_api_dep_product_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format “Bearer {ACCESS_TOKEN}”"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"{{schema_id_dep_product_lookup}}\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productID\",\r\n            \"destination\": \"productID\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"tenant\",\r\n            \"destination\": \"{{tenant_id}}\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productName\",\r\n            \"destination\": \"productName\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"productListPrice\",\r\n            \"destination\": \"productListPrice\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "05 - Dataflows",
							"item": [
								{
									"name": "Create Dataflow - HTTP API - dep: Customer Accounts",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_cus_acc\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Customer Accounts (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Accounts (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_cus_acc}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_cus_acc}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_cus_acc}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Customer Active Lines",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_cus_act_lines\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Customer Active Lines (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Active Lines (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_cus_act_lines}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_cus_act_lines}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_cus_act_lines}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Customer Aggregates",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_cus_agg\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Customer Aggregates (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Customer Aggregates (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_cus_agg}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_cus_agg}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_cus_agg}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Billing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_billing\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Billing (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Billing (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_billing}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_billing}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_billing}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_orders\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Orders (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Orders (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_orders}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_orders}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_orders}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Ecommerce",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_ecommerce\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Ecommerce (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Ecommerce (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_ecommerce}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_ecommerce}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_ecommerce}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Web",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_web\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Web (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Web (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_web}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_web}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_web}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Store [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_store_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Store [Lookup] (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Store [Lookup] (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_store_lookup}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_store_lookup}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_store_lookup}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Plan [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_plan_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Plan [Lookup] (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Plan [Lookup] (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_plan_lookup}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_plan_lookup}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_plan_lookup}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Dataflow - HTTP API - dep: Product [Lookup]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"sflow_id_http_api_dep_product_lookup\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Product [Lookup] (stream)\",\r\n    \"description\": \"{{PREFIX_NAME}}: Product [Lookup] (stream)\",\r\n    \"flowSpec\": {\r\n        \"id\": \"c1a19761-d2c7-4702-b9fa-fe91f0613e81\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{source_conn_id_http_api_dep_product_lookup}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{target_conn_id_http_api_dep_product_lookup}}\"\r\n    ],\r\n    \"transformations\": [\r\n        {\r\n            \"name\": \"Mapping\",\r\n            \"params\": {\r\n                \"mappingId\": \"{{map_set_id_http_api_dep_product_lookup}}\",\r\n                \"mappingVersion\": 0\r\n            }\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "06 - Validate",
							"item": [
								{
									"name": "Delay 60 mins",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//timeout before proceeding to next set of calls\r",
													"sleep(3600000)\r",
													"function sleep(delay) {\r",
													"    var start = new Date().getTime();\r",
													"    while (new Date().getTime() < start + delay);\r",
													"} "
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://postman-echo.com/get",
											"protocol": "https",
											"host": [
												"postman-echo",
												"com"
											],
											"path": [
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check Flows",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//get response\r",
													"var data = JSON.parse(pm.response.text());\r",
													"var count = data.count;\r",
													"\r",
													"//determine if all flows enabled successfully\r",
													"pm.test(\"All flows are successfully enabled for data ingestion\", () => {\r",
													"    pm.expect(count).to.eql(10);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"type": "text"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"type": "text"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/flows?property=inheritedAttributes.sourceConnections[].baseConnection.id=={{source_account_id_http_api}}&count=true&property=state==enabled",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											],
											"query": [
												{
													"key": "property",
													"value": "inheritedAttributes.sourceConnections[].baseConnection.id=={{source_account_id_http_api}}"
												},
												{
													"key": "count",
													"value": "true"
												},
												{
													"key": "property",
													"value": "state==enabled"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "05 - Data Ingestion",
			"item": [
				{
					"name": "HTTP API",
					"item": [
						{
							"name": "01 - Gather",
							"item": [
								{
									"name": "Get Account Inlet URL - HTTP API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//set variable id_name\r",
													"const id_name = \"source_account_inlet_http_api\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data.items[0].auth.params.inletId);\r",
													"\r",
													"//test for dataset id variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});\r",
													"\r",
													"\r",
													"//timeout to let dataflows to come online\r",
													"setTimeout(function(){},30000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}"
											}
										],
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/foundation/flowservice/connections/:CONNECTION_ID",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connections",
												":CONNECTION_ID"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "CONNECTION_ID",
													"value": "{{source_account_id_http_api}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "02 - Single-Record",
							"item": [
								{
									"name": "Stream - Depeche Mode - dep: Customer Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_cus_acc}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"createDate\": \"2021-05-13T14:49:46Z\",\r\n    \"modifyDate\": \"2022-01-20T13:15:32Z\",\r\n    \"firstName\": \"Depeche\",\r\n    \"lastName\": \"Mode\",\r\n    \"birth_Date\": \"1980-04-16\",\r\n    \"email\": \"depeche.mode@dep.com\",\r\n    \"mobile_phone\": \"+19149012419\",\r\n    \"email_optIn\": \"y\",\r\n    \"sms_optIn\": \"y\",\r\n    \"customer_id\": \"266242885\",\r\n    \"shipping_street_address\": \"108 Ruskin Terrace\",\r\n    \"shipping_city\": \"New York City\",\r\n    \"shipping_state\": \"NY\",\r\n    \"shipping_zip_code\": \"11355\",\r\n    \"billing_street_address\": \"108 Ruskin Terrace\",\r\n    \"billing_city\": \"New York City\",\r\n    \"billing_state\": \"NY\",\r\n    \"billing_zip_code\": \"11355\",\r\n    \"plan_id\": \"m3\",\r\n    \"plan_name\": \"pro\",\r\n    \"account_create_date\": \"2021-05-13T14:49:46Z\",\r\n    \"account_end_date\": \"2022-01-20T13:15:32Z\",\r\n    \"source\": \"web\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://dcs.adobedc.net/collection/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"dcs",
												"adobedc",
												"net"
											],
											"path": [
												"collection",
												"{{source_account_inlet_http_api}}"
											],
											"query": [
												{
													"key": "syncValidation=true",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Stream - Depeche Mode - dep: Customer Active Lines",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_cus_act_lines}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_repo\": {\r\n        \"createDate\": \"2022-08-06T08:58:29Z\",\r\n        \"modifyDate\": \"2022-08-06T08:58:29Z\"\r\n    },\r\n    \"_dxp\": {\r\n        \"customerID\": \"266242885\",\r\n        \"activeProducts\": [\r\n            {\r\n                \"customerLineID\": \"06-97590066-89\",\r\n                \"productID\": \"PRODUCT-2\",\r\n                \"make\": \"Apple\",\r\n                \"model\": \"iPhone 14 Plus\"\r\n            },\r\n            {\r\n                \"customerLineID\": \"06-97590066-88\",\r\n                \"productID\": \"PRODUCT-6\",\r\n                \"make\": \"Google\",\r\n                \"model\": \"Pixel 7 Pro\"\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Stream - Depeche Mode - dep: Customer Aggregates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": " application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_cus_agg}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_repo\": {\r\n        \"createDate\": \"2022-07-27T04:15:10Z\",\r\n        \"modifyDate\": \"2022-07-27T04:15:10Z\"\r\n    },\r\n    \"_dxp\": {\r\n        \"customerID\": \"266242885\",\r\n        \"aggregates\": {\r\n            \"rollingSixMonthAvgMonthlyDataUsage\": 30,\r\n            \"rollingSixMonthTotalDataUsage\": 200\r\n        }\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Stream - Depeche Mode - dep: Ecommerce",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//load moment\r",
													"const moment = require('moment');\r",
													"\r",
													"//set order dates\r",
													"let order1 = moment().subtract(7, 'days').utc().format();\r",
													"pm.variables.set(\"order1\",order1);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": " application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_ecommerce}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"_id\": \"ecomm-01\",\r\n    \"eventType\": \"orders.pickedUp\",\r\n    \"timestamp\": \"{{order1}}\",\r\n    \"_dxp\": {\r\n        \"customerID\": \"266242885\",\r\n        \"personalEmail\": \"depeche.mode@dep.com\"\r\n    },\r\n    \"order\": {\r\n        \"orderID\": \"a73f6f98-4a1b-468b-a1cf-e034a7d668bc\",\r\n        \"orderDate\": \"{{order1}}\",\r\n        \"priceTotal\": 1001.72\r\n    },\r\n    \"shipping\": {\r\n        \"address\": {\r\n            \"street1\": \"108 Ruskin Terrace\",\r\n            \"city\": \"New York City\",\r\n            \"state\": \"NY\",\r\n            \"postalCode\": \"11355\"\r\n        },\r\n        \"shippingMethod\": \"standard\",\r\n        \"shippingAmount\": 0,\r\n        \"shippingDestination\": \"store\"\r\n    },\r\n    \"productListItems\": [\r\n        {\r\n            \"_id\": \"PRODUCT-2\",\r\n            \"SKU\": \"PRODUCT-2\",\r\n            \"quantity\": 1,\r\n            \"priceTotal\": 799.99,\r\n            \"currencyCode\": \"USD\",\r\n            \"_dxp\": {\r\n                \"make\": \"Apple\",\r\n                \"model\": \"iPhone 14 Plus\"\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"PRODUCT-6\",\r\n            \"SKU\": \"PRODUCT-6\",\r\n            \"quantity\": 1,\r\n            \"priceTotal\": 899.99,\r\n            \"currencyCode\": \"USD\",\r\n            \"_dxp\": {\r\n                \"make\": \"Google\",\r\n                \"model\": \"Pixel 7 Pro\"\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "03 - Multi-Record",
							"item": [
								{
									"name": "Stream - Depeche Mode - dep: Billing",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//load moment\r",
													"const moment = require('moment');\r",
													"\r",
													"\r",
													"//p1 dates\r",
													"var p1_date = moment({day: 1, hour: 0, minute: 0, seconds: 0, milliseconds: 0});\r",
													"p1_date = moment(p1_date).subtract(1,'months').utc(1).format();\r",
													"var p1_start = p1_date;\r",
													"var p1_end = moment(p1_start).add(1,'months').subtract(1,'milliseconds').utc().format();\r",
													"pm.variables.set(\"p1_date\",p1_date);\r",
													"pm.variables.set(\"p1_start\",p1_start);\r",
													"pm.variables.set(\"p1_end\",p2_end);\r",
													"\r",
													"\r",
													"//p2 dates\r",
													"var p2_date = moment(p1_date).subtract(1,'months').utc().format();\r",
													"var p2_start = p2_date;\r",
													"var p2_end = moment(p2_start).add(1,'months').subtract(1,'milliseconds').utc().format();\r",
													"pm.variables.set(\"p2_date\",p2_date);\r",
													"pm.variables.set(\"p2_start\",p2_start);\r",
													"pm.variables.set(\"p2_end\",p2_end);\r",
													"\r",
													"\r",
													"//p3 dates\r",
													"var p3_date = moment(p1_date).subtract(2,'months').utc().format();\r",
													"var p3_start = p3_date;\r",
													"var p3_end = moment(p3_start).add(1,'months').subtract(1,'milliseconds').utc().format();\r",
													"pm.variables.set(\"p3_date\",p3_date);\r",
													"pm.variables.set(\"p3_start\",p3_start);\r",
													"pm.variables.set(\"p3_end\",p3_end);\r",
													"\r",
													"\r",
													"//p4 dates\r",
													"var p4_date = moment(p1_date).subtract(3,'months').utc().format();\r",
													"var p4_start = p4_date;\r",
													"var p4_end = moment(p4_start).add(1,'months').subtract(1,'milliseconds').utc().format();\r",
													"pm.variables.set(\"p4_date\",p4_date);\r",
													"pm.variables.set(\"p4_start\",p4_start);\r",
													"pm.variables.set(\"p4_end\",p4_end);\r",
													"\r",
													"\r",
													"//p5 dates\r",
													"var p5_date = moment(p1_date).subtract(4,'months').utc().format();\r",
													"var p5_start = p5_date;\r",
													"var p5_end = moment(p5_start).add(1,'months').subtract(1,'milliseconds').utc().format();\r",
													"pm.variables.set(\"p5_date\",p5_date);\r",
													"pm.variables.set(\"p5_start\",p5_start);\r",
													"pm.variables.set(\"p5_end\",p5_end);\r",
													"\r",
													"\r",
													"//p6 dates\r",
													"var p6_date = moment(p1_date).subtract(5,'months').utc().format();\r",
													"var p6_start = p6_date;\r",
													"var p6_end = moment(p6_start).add(1,'months').subtract(1,'milliseconds').utc().format();\r",
													"pm.variables.set(\"p6_date\",p6_date);\r",
													"pm.variables.set(\"p6_start\",p6_start);\r",
													"pm.variables.set(\"p6_end\",p6_end);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": " application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_billing}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"messages\": [\r\n        {\r\n            \"_id\": \"stmt-001\",\r\n            \"eventType\": \"billing.statement\",\r\n            \"timestamp\": \"{{p1_date}}\",\r\n            \"_dxp\": {\r\n                \"customerID\": \"266242885\",\r\n                \"billing\": {\r\n                    \"periodStart\": \"{{p1_start}}\",\r\n                    \"periodEnd\": \"{{p1_end}}\",\r\n                    \"billingDetails\": [\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-89\",\r\n                            \"phoneNumber\": \"+19149012419\",\r\n                            \"amountCharged\": 54.32\r\n                        },\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-88\",\r\n                            \"phoneNumber\": \"+19149012418\",\r\n                            \"amountCharged\": 57.97\r\n                        }\r\n                    ],\r\n                    \"type\": \"phone\",\r\n                    \"dataUsage\": 200,\r\n                    \"dataAllowance\": 200,\r\n                    \"total\": 112.29,\r\n                    \"planID\": \"m3\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"stmt-002\",\r\n            \"eventType\": \"billing.statement\",\r\n            \"timestamp\": \"{{p2_date}}\",\r\n            \"_dxp\": {\r\n                \"customerID\": \"266242885\",\r\n                \"billing\": {\r\n                    \"periodStart\": \"{{p2_start}}\",\r\n                    \"periodEnd\": \"{{p2_end}}\",\r\n                    \"billingDetails\": [\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-89\",\r\n                            \"phoneNumber\": \"+19149012419\",\r\n                            \"amountCharged\": 54.32\r\n                        },\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-88\",\r\n                            \"phoneNumber\": \"+19149012418\",\r\n                            \"amountCharged\": 57.97\r\n                        }\r\n                    ],\r\n                    \"type\": \"phone\",\r\n                    \"dataUsage\": 200,\r\n                    \"dataAllowance\": 200,\r\n                    \"total\": 112.29,\r\n                    \"planID\": \"m3\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"stmt-003\",\r\n            \"eventType\": \"billing.statement\",\r\n            \"timestamp\": \"{{p3_date}}\",\r\n            \"_dxp\": {\r\n                \"customerID\": \"266242885\",\r\n                \"billing\": {\r\n                    \"periodStart\": \"{{p3_start}}\",\r\n                    \"periodEnd\": \"{{p3_end}}\",\r\n                    \"billingDetails\": [\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-89\",\r\n                            \"phoneNumber\": \"+19149012419\",\r\n                            \"amountCharged\": 54.32\r\n                        },\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-88\",\r\n                            \"phoneNumber\": \"+19149012418\",\r\n                            \"amountCharged\": 57.97\r\n                        }\r\n                    ],\r\n                    \"type\": \"phone\",\r\n                    \"dataUsage\": 200,\r\n                    \"dataAllowance\": 200,\r\n                    \"total\": 112.29,\r\n                    \"planID\": \"m3\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"stmt-004\",\r\n            \"eventType\": \"billing.statement\",\r\n            \"timestamp\": \"{{p4_date}}\",\r\n            \"_dxp\": {\r\n                \"customerID\": \"266242885\",\r\n                \"billing\": {\r\n                    \"periodStart\": \"{{p4_start}}\",\r\n                    \"periodEnd\": \"{{p4_end}}\",\r\n                    \"billingDetails\": [\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-89\",\r\n                            \"phoneNumber\": \"+19149012419\",\r\n                            \"amountCharged\": 54.32\r\n                        },\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-88\",\r\n                            \"phoneNumber\": \"+19149012418\",\r\n                            \"amountCharged\": 57.97\r\n                        }\r\n                    ],\r\n                    \"type\": \"phone\",\r\n                    \"dataUsage\": 200,\r\n                    \"dataAllowance\": 200,\r\n                    \"total\": 112.29,\r\n                    \"planID\": \"m3\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"stmt-005\",\r\n            \"eventType\": \"billing.statement\",\r\n            \"timestamp\": \"{{p5_date}}\",\r\n            \"_dxp\": {\r\n                \"customerID\": \"266242885\",\r\n                \"billing\": {\r\n                    \"periodStart\": \"{{p5_start}}\",\r\n                    \"periodEnd\": \"{{p5_end}}\",\r\n                    \"billingDetails\": [\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-89\",\r\n                            \"phoneNumber\": \"+19149012419\",\r\n                            \"amountCharged\": 54.32\r\n                        },\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-88\",\r\n                            \"phoneNumber\": \"+19149012418\",\r\n                            \"amountCharged\": 57.97\r\n                        }\r\n                    ],\r\n                    \"type\": \"phone\",\r\n                    \"dataUsage\": 200,\r\n                    \"dataAllowance\": 200,\r\n                    \"total\": 112.29,\r\n                    \"planID\": \"m3\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"stmt-006\",\r\n            \"eventType\": \"billing.statement\",\r\n            \"timestamp\": \"{{p6_date}}\",\r\n            \"_dxp\": {\r\n                \"customerID\": \"266242885\",\r\n                \"billing\": {\r\n                    \"periodStart\": \"{{p6_start}}\",\r\n                    \"periodEnd\": \"{{p6_end}}\",\r\n                    \"billingDetails\": [\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-89\",\r\n                            \"phoneNumber\": \"+19149012419\",\r\n                            \"amountCharged\": 54.32\r\n                        },\r\n                        {\r\n                            \"detailStatementID\": \"19nN5fAZprHmV1PshcyWdYgPbdzxzdToQc\",\r\n                            \"customerLineID\": \"06-97590066-88\",\r\n                            \"phoneNumber\": \"+19149012418\",\r\n                            \"amountCharged\": 57.97\r\n                        }\r\n                    ],\r\n                    \"type\": \"phone\",\r\n                    \"dataUsage\": 200,\r\n                    \"dataAllowance\": 200,\r\n                    \"total\": 112.29,\r\n                    \"planID\": \"m3\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/batch/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"batch",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Stream - Depeche Mode - dep: Orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//load moment\r",
													"const moment = require('moment');\r",
													"\r",
													"//set order dates\r",
													"let order1 = moment().subtract(7, 'days').utc().format();\r",
													"pm.variables.set(\"order1\",order1);\r",
													"\r",
													"let order2 = moment().utc().format();\r",
													"pm.variables.set(\"order2\",order2);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_orders}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"messages\": [\r\n        {\r\n            \"_id\": \"order-02\",\r\n            \"eventType\": \"orders.pickedUp\",\r\n            \"timestamp\": \"{{order2}}\",\r\n            \"_dxp\": {\r\n                \"customerID\": \"266242885\",\r\n                \"personalEmail\": \"depeche.mode@dep.com\"\r\n            },\r\n            \"order\": {\r\n                \"orderID\": \"a73f6f98-4a1b-468b-a1cf-e034a7d668bc\",\r\n                \"orderDate\": \"{{order2}}\",\r\n                \"priceTotal\": 849.99,\r\n                \"payment\": {\r\n                    \"paymentType\": \"credit\",\r\n                    \"paymentAmount\": 799.99,\r\n                    \"currencyCode\": \"USD\",\r\n                    \"transactionID\": \"1031a207-ba8c-4ec0-8078-86f125639dbc\"\r\n                },\r\n                \"_dxp\": {\r\n                    \"plan\": {\r\n                        \"planID\": \"m3\"\r\n                    }\r\n                }\r\n            },\r\n            \"store\": {\r\n                \"storeID\": \"STORE-2\"\r\n            },\r\n            \"shipping\": {\r\n                \"address\": {\r\n                    \"street1\": \"108 Ruskin Terrace\",\r\n                    \"city\": \"New York City\",\r\n                    \"state\": \"NY\",\r\n                    \"postalCode\": \"11355\"\r\n                },\r\n                \"shippingMethod\": \"standard\",\r\n                \"shippingAmount\": 0,\r\n                \"shippingDestination\": \"store\"\r\n            },\r\n            \"billing\": {\r\n                \"address\": {\r\n                    \"street1\": \"108 Ruskin Terrace\",\r\n                    \"city\": \"New York City\",\r\n                    \"state\": \"NY\",\r\n                    \"postalCode\": \"11355\"\r\n                }\r\n            },\r\n            \"productListItems\": [\r\n                {\r\n                    \"_id\": \"PRODUCT-2\",\r\n                    \"SKU\": \"PRODUCT-2\",\r\n                    \"quantity\": 1,\r\n                    \"priceTotal\": 799.99,\r\n                    \"currencyCode\": \"USD\",\r\n                    \"_dxp\": {\r\n                        \"make\": \"Apple\",\r\n                        \"model\": \"iPhone 14 Plus\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"_id\": \"order-01\",\r\n            \"eventType\": \"orders.placed\",\r\n            \"timestamp\": \"{{order1}}\",\r\n            \"_dxp\": {\r\n                \"customerID\": \"266242885\",\r\n                \"personalEmail\": \"dave.gahan@dep.com\"\r\n            },\r\n            \"order\": {\r\n                \"orderID\": \"a73f6f98-4a1b-468b-a1cf-e034a7d6682d\",\r\n                \"orderDate\": \"{{order1}}\",\r\n                \"priceTotal\": 1699.98,\r\n                \"payment\": {\r\n                    \"paymentType\": \"credit\",\r\n                    \"paymentAmount\": 1699.98,\r\n                    \"currencyCode\": \"USD\",\r\n                    \"transactionID\": \"1031a207-ba8c-4ec0-8078-86f125639d2d\"\r\n                }\r\n            },\r\n            \"store\": {\r\n                \"storeID\": \"STORE-2\"\r\n            },\r\n            \"shipping\": {\r\n                \"address\": {\r\n                    \"street1\": \"108 Ruskin Terrace\",\r\n                    \"city\": \"New York City\",\r\n                    \"state\": \"NY\",\r\n                    \"postalCode\": \"11355\"\r\n                },\r\n                \"shippingMethod\": \"standard\",\r\n                \"shippingAmount\": 0,\r\n                \"shippingDestination\": \"store\"\r\n            },\r\n            \"billing\": {\r\n                \"address\": {\r\n                    \"street1\": \"108 Ruskin Terrace\",\r\n                    \"city\": \"New York City\",\r\n                    \"state\": \"NY\",\r\n                    \"postalCode\": \"11355\"\r\n                }\r\n            },\r\n            \"productListItems\": [\r\n                {\r\n                    \"_id\": \"PRODUCT-2\",\r\n                    \"SKU\": \"PRODUCT-2\",\r\n                    \"quantity\": 1,\r\n                    \"priceTotal\": 799.99,\r\n                    \"currencyCode\": \"USD\",\r\n                    \"_dxp\": {\r\n                        \"make\": \"Apple\",\r\n                        \"model\": \"iPhone 14 Plus\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"PRODUCT-6\",\r\n                    \"SKU\": \"PRODUCT-6\",\r\n                    \"quantity\": 1,\r\n                    \"priceTotal\": 899.99,\r\n                    \"currencyCode\": \"USD\",\r\n                    \"_dxp\": {\r\n                        \"make\": \"Google\",\r\n                        \"model\": \"Pixel 7 Pro\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/batch/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"batch",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Stream - Depeche Mode - dep: Web",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//load moment\r",
													"const moment = require('moment');\r",
													"\r",
													"\r",
													"//format dates for 33 events\r",
													"\r",
													"//day 1 events (6)\r",
													"let day1_base_date = moment().subtract(14, 'days').utc().format();\r",
													"pm.variables.set(\"day1_event1\",day1_base_date);\r",
													"pm.variables.set(\"day1_event2\",moment(day1_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day1_event3\",moment(day1_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day1_event4\",moment(day1_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day1_event5\",moment(day1_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day1_event6\",moment(day1_base_date).add(5,'seconds').utc().format());\r",
													"\r",
													"\r",
													"//day 2 events (17)\r",
													"let day2_base_date = moment().subtract(10, 'days').utc().format();\r",
													"pm.variables.set(\"day2_event1\",day2_base_date);\r",
													"pm.variables.set(\"day2_event2\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event3\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event4\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event5\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event6\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event7\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event8\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event9\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event10\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event11\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event12\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event13\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event14\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event15\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event16\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day2_event17\",moment(day2_base_date).add(5,'seconds').utc().format());\r",
													"\r",
													"\r",
													"//day 3 events (10)\r",
													"let day3_base_date = moment().subtract(3, 'days').utc().format();\r",
													"pm.variables.set(\"day3_event1\",day3_base_date);\r",
													"pm.variables.set(\"day3_event2\",moment(day3_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day3_event3\",moment(day3_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day3_event4\",moment(day3_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day3_event5\",moment(day3_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day3_event6\",moment(day3_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day3_event7\",moment(day3_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day3_event8\",moment(day3_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day3_event9\",moment(day3_base_date).add(5,'seconds').utc().format());\r",
													"pm.variables.set(\"day3_event10\",moment(day3_base_date).add(5,'seconds').utc().format());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": " application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_web}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"messages\": [\r\n        {\r\n            \"_id\": \"web-01\",\r\n            \"timestamp\": \"{{day1_event1}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Nav: Homepage\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"34537751351243145301122536483456723542\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"GAID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"266242-9012\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-02\",\r\n            \"timestamp\": \"{{day1_event2}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Sales: Accessories Sale\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"34537751351243145301122536483456723542\",\r\n                        \"primary\": true\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-03\",\r\n            \"timestamp\": \"{{day1_event3}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Product: Sales Phones\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"34537751351243145301122536483456723542\",\r\n                        \"primary\": true\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-04\",\r\n            \"timestamp\": \"{{day1_event4}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Phone: Apple iPhone 14 Pro\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"34537751351243145301122536483456723542\",\r\n                        \"primary\": true\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-05\",\r\n            \"timestamp\": \"{{day1_event5}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Product: Sales Phones\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"34537751351243145301122536483456723542\",\r\n                        \"primary\": true\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-06\",\r\n            \"timestamp\": \"{{day1_event6}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Phone: Google Pixel 8 Pro\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"34537751351243145301122536483456723542\",\r\n                        \"primary\": true\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-07\",\r\n            \"timestamp\": \"{{day2_event1}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Sales: Take 20% Off\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"GAID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"266242-9012\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-08\",\r\n            \"timestamp\": \"{{day2_event2}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Nav: Homepage\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-09\",\r\n            \"timestamp\": \"{{day2_event3}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Special: Product Sneakpeeks\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-10\",\r\n            \"timestamp\": \"{{day2_event4}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Review: Contact Us\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-11\",\r\n            \"timestamp\": \"{{day2_event5}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Special: Product Sneakpeeks\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-12\",\r\n            \"timestamp\": \"{{day2_event6}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Review: Phone Extra Options\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-13\",\r\n            \"timestamp\": \"{{day2_event7}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Product: Accessories\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-14\",\r\n            \"timestamp\": \"{{day2_event8}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Phone: Apple iPhone 14 Pro\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-15\",\r\n            \"timestamp\": \"{{day2_event9}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Cart: Add To Cart\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-16\",\r\n            \"timestamp\": \"{{day2_event10}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Nav: Homepage\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-17\",\r\n            \"timestamp\": \"{{day2_event11}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Product: Sales Phones\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-18\",\r\n            \"timestamp\": \"{{day2_event12}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Phone: Samsung Galaxy S22+\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-19\",\r\n            \"timestamp\": \"{{day2_event13}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Product: Sales Phones\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-20\",\r\n            \"timestamp\": \"{{day2_event14}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Phone: Oneplus 9\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-21\",\r\n            \"timestamp\": \"{{day2_event15}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Cart: Add To Cart\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-22\",\r\n            \"timestamp\": \"{{day2_event16}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Cart: Checkout\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-23\",\r\n            \"timestamp\": \"{{day2_event17}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Cart: Order\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"66385443304271800137026604878870723316\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-24\",\r\n            \"timestamp\": \"{{day3_event1}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Nav: Homepage\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"GAID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"266242-9013\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-25\",\r\n            \"timestamp\": \"{{day3_event2}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Nav: Homepage\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-26\",\r\n            \"timestamp\": \"{{day3_event3}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Special: Product Sneakpeeks\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-27\",\r\n            \"timestamp\": \"{{day3_event4}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Review: Phone Plans\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-28\",\r\n            \"timestamp\": \"{{day3_event5}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Sales: Accessories Sale\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-29\",\r\n            \"timestamp\": \"{{day3_event6}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Nav: Homepage\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-30\",\r\n            \"timestamp\": \"{{day3_event7}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Product: Accessories\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-31\",\r\n            \"timestamp\": \"{{day3_event8}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Phone: Google Pixel 8 Pro\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-32\",\r\n            \"timestamp\": \"{{day3_event9}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Product: Accessories\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"_id\": \"web-33\",\r\n            \"timestamp\": \"{{day3_event10}}\",\r\n            \"web\": {\r\n                \"webPageDetails\": {\r\n                    \"name\": \"Phone: Apple iPhone 14 Pro\",\r\n                    \"pageViews\": {\r\n                        \"value\": 1\r\n                    }\r\n                }\r\n            },\r\n            \"identityMap\": {\r\n                \"ECID\": [\r\n                    {\r\n                        \"authenticatedState\": \"ambiguous\",\r\n                        \"id\": \"11537751351243145301122536483456723597\",\r\n                        \"primary\": true\r\n                    }\r\n                ],\r\n                \"customerID\": [\r\n                    {\r\n                        \"authenticatedState\": \"authenticated\",\r\n                        \"id\": \"266242885\",\r\n                        \"primary\": false\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/batch/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"batch",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Stream - dep: Store [Lookup]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": " application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_store_lookup}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"messages\": [\r\n        {\r\n            \"tenant\": {\r\n                \"storeID\": \"STORE-1\",\r\n                \"name\": \"Cell4U\",\r\n                \"inagurationDate\": \"1985-04-01T12:00:00Z\",\r\n                \"openTime\": \"09:00AM\",\r\n                \"closeTime\": \"10:00PM\"\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"29 Milwaukee Place\",\r\n                \"city\": \"Albany\",\r\n                \"state\": \"NY\",\r\n                \"postalCode\": \"12227\"\r\n            }\r\n        },\r\n        {\r\n            \"tenant\": {\r\n                \"storeID\": \"STORE-2\",\r\n                \"name\": \"Phone Stop\",\r\n                \"inagurationDate\": \"1990-04-01T12:00:00Z\",\r\n                \"openTime\": \"09:00AM\",\r\n                \"closeTime\": \"10:00PM\"\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"475 Center Place\",\r\n                \"city\": \"Atlanta\",\r\n                \"state\": \"GA\",\r\n                \"postalCode\": \"30301\"\r\n            }\r\n        },\r\n        {\r\n            \"tenant\": {\r\n                \"storeID\": \"STORE-3\",\r\n                \"name\": \"Data Hog\",\r\n                \"inagurationDate\": \"1995-04-01T12:00:00Z\",\r\n                \"openTime\": \"09:00AM\",\r\n                \"closeTime\": \"10:00PM\"\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"6 Twin Pines Circle\",\r\n                \"city\": \"Arlington\",\r\n                \"state\": \"VA\",\r\n                \"postalCode\": \"22234\"\r\n            }\r\n        },\r\n        {\r\n            \"tenant\": {\r\n                \"storeID\": \"STORE-4\",\r\n                \"name\": \"No Reception\",\r\n                \"inagurationDate\": \"2000-04-01T12:00:00Z\",\r\n                \"openTime\": \"09:00AM\",\r\n                \"closeTime\": \"10:00PM\"\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"35901 Anniversary Parkway\",\r\n                \"city\": \"Tulsa\",\r\n                \"state\": \"OK\",\r\n                \"postalCode\": \"74116\"\r\n            }\r\n        },\r\n        {\r\n            \"tenant\": {\r\n                \"storeID\": \"STORE-5\",\r\n                \"name\": \"Web Channel\",\r\n                \"inagurationDate\": \"2005-04-01T12:00:00Z\",\r\n                \"openTime\": \"12:00AM\",\r\n                \"closeTime\": \"11:59PM\"\r\n            },\r\n            \"address\": {\r\n                \"street1\": \"7 Tennyson Park\",\r\n                \"city\": \"Houston\",\r\n                \"state\": \"TX\",\r\n                \"postalCode\": \"77206\"\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/batch/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"batch",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Stream - dep: Plan [Lookup]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": " application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_plan_lookup}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"messages\": [\r\n        {\r\n            \"planID\": \"m1\",\r\n            \"planName\": \"basic\",\r\n            \"tenant\": {\r\n                \"planType\": \"mobile\",\r\n                \"monthlyLineCost\": 25,\r\n                \"hasUnlimitedTalk\": true,\r\n                \"hasUnlimitedText\": false,\r\n                \"hasUnlimitedData\": false,\r\n                \"monthlyDataAllowance\": 5\r\n            }\r\n        },\r\n        {\r\n            \"planID\": \"m2\",\r\n            \"planName\": \"ultimate\",\r\n            \"tenant\": {\r\n                \"planType\": \"mobile\",\r\n                \"monthlyLineCost\": 40,\r\n                \"hasUnlimitedTalk\": true,\r\n                \"hasUnlimitedText\": true,\r\n                \"hasUnlimitedData\": false,\r\n                \"monthlyDataAllowance\": 20\r\n            }\r\n        },\r\n        {\r\n            \"planID\": \"m3\",\r\n            \"planName\": \"pro\",\r\n            \"tenant\": {\r\n                \"planType\": \"mobile\",\r\n                \"monthlyLineCost\": 50,\r\n                \"hasUnlimitedTalk\": true,\r\n                \"hasUnlimitedText\": true,\r\n                \"hasUnlimitedData\": true,\r\n                \"monthlyDataAllowance\": 100\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/batch/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"batch",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Stream - dep: Product [Lookup]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": " application/json"
											},
											{
												"key": "x-adobe-flow-id",
												"value": "{{sflow_id_http_api_dep_product_lookup}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"messages\": [\r\n        {\r\n            \"productID\": \"PRODUCT-1\",\r\n            \"productListPrice\": 699.99,\r\n            \"tenant\": {\r\n                \"make\": \"Apple\",\r\n                \"model\": \"iPhone 14\",\r\n                \"releaseYear\": 2022,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Apple iPhone 14\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-2\",\r\n            \"productListPrice\": 799.99,\r\n            \"tenant\": {\r\n                \"make\": \"Apple\",\r\n                \"model\": \"iPhone 14 Plus\",\r\n                \"releaseYear\": 2022,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Apple iPhone 14 Plus\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-3\",\r\n            \"productListPrice\": 799.99,\r\n            \"tenant\": {\r\n                \"make\": \"Apple\",\r\n                \"model\": \"iPhone 15\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Apple iPhone 15\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-4\",\r\n            \"productListPrice\": 999.99,\r\n            \"tenant\": {\r\n                \"make\": \"Apple\",\r\n                \"model\": \"iPhone 15 Pro\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Apple iPhone 15 Pro\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-5\",\r\n            \"productListPrice\": 599.99,\r\n            \"tenant\": {\r\n                \"make\": \"Google\",\r\n                \"model\": \"Pixel 7\",\r\n                \"releaseYear\": 2022,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Google Pixel 7\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-6\",\r\n            \"productListPrice\": 899.99,\r\n            \"tenant\": {\r\n                \"make\": \"Google\",\r\n                \"model\": \"Pixel 7 Pro\",\r\n                \"releaseYear\": 2022,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Google Pixel 7 Pro\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-7\",\r\n            \"productListPrice\": 699.99,\r\n            \"tenant\": {\r\n                \"make\": \"Google\",\r\n                \"model\": \"Pixel 8\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Google Pixel 8\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-8\",\r\n            \"productListPrice\": 999.99,\r\n            \"tenant\": {\r\n                \"make\": \"Google\",\r\n                \"model\": \"Pixel 8 Pro\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Google Pixel 8 Pro\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-9\",\r\n            \"productListPrice\": 1799.99,\r\n            \"tenant\": {\r\n                \"make\": \"Google\",\r\n                \"model\": \"Pixel Fold\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Google Pixel Fold\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-10\",\r\n            \"productListPrice\": 799.99,\r\n            \"tenant\": {\r\n                \"make\": \"Samsung\",\r\n                \"model\": \"Galaxy S24\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Samsung Galaxy S24\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-11\",\r\n            \"productListPrice\": 999.99,\r\n            \"tenant\": {\r\n                \"make\": \"Samsung\",\r\n                \"model\": \"Galaxy S24+\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Samsung Galaxy S24+\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-12\",\r\n            \"productListPrice\": 1299.99,\r\n            \"tenant\": {\r\n                \"make\": \"Samsung\",\r\n                \"model\": \"Galaxy S24 Ultra\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Samsung Galaxy S24 Ultra\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-13\",\r\n            \"productListPrice\": 999.99,\r\n            \"tenant\": {\r\n                \"make\": \"Samsung\",\r\n                \"model\": \"Z Flip5\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Samsung Z Flip5\"\r\n        },\r\n        {\r\n            \"productID\": \"PRODUCT-14\",\r\n            \"productListPrice\": 1799.99,\r\n            \"tenant\": {\r\n                \"make\": \"Samsung\",\r\n                \"model\": \"Z Fold5\",\r\n                \"releaseYear\": 2023,\r\n                \"productType\": \"phone\",\r\n                \"5gCompatible\": \"true\"\r\n            },\r\n            \"productName\": \"Samsung Z Fold5\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{STREAMING_INGESTION_HOST}}/collection/batch/{{source_account_inlet_http_api}}",
											"protocol": "https",
											"host": [
												"{{STREAMING_INGESTION_HOST}}"
											],
											"path": [
												"collection",
												"batch",
												"{{source_account_inlet_http_api}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(207);",
											"});"
										]
									}
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "06 - Profile Service",
			"item": [
				{
					"name": "01 - Merge Policies",
					"item": [
						{
							"name": "01 - Gather",
							"item": [
								{
									"name": "Get default merge policy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//test for successful api response\r",
													"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//set variable id_name\r",
													"const id_name = \"merge_policy_default_profile\";\r",
													"\r",
													"//store collection variable\r",
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(id_name, data[\"children\"][0][\"id\"]);\r",
													"\r",
													"//test for default merge policy variable\r",
													"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
													"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											},
											{
												"key": "x-request-id",
												"value": "{{x-request-id}}",
												"description": "Request Id",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/core/ups/config/mergePolicies?schema.name=_xdm.context.profile",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"core",
												"ups",
												"config",
												"mergePolicies"
											],
											"query": [
												{
													"key": "schema.name",
													"value": "_xdm.context.profile"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "02 - New Merge Policies",
							"item": [
								{
									"name": "Create MP - dep: No Stitch",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information."
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"{{PREFIX_NAME}}: No Stitch\",\r\n    \"identityGraph\": {\r\n        \"type\": \"none\"\r\n    },\r\n    \"attributeMerge\": {\r\n        \"type\":\"timestampOrdered\"\r\n    },\r\n    \"schema\": {\r\n        \"name\":\"_xdm.context.profile\"\r\n    },\r\n    \"isActiveOnEdge\": false,\r\n    \"default\": false\r\n}"
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/core/ups/config/mergePolicies",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"core",
												"ups",
												"config",
												"mergePolicies"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "03 - Update Merge Policies",
							"item": [
								{
									"name": "Update default merge policy to active on-edge",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//test for successful api response\r",
													"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
											},
											{
												"key": "x-profile-instance-id",
												"value": "",
												"description": "Profile Instance ID {{x-profile-instance-id}}",
												"disabled": true
											},
											{
												"key": "x-request-id",
												"value": "",
												"description": "Request Id {{x-request-id}}",
												"disabled": true
											},
											{
												"key": "If-Match",
												"value": "\\\"0f00203e-0000-0200-0000-61f1faea0000\\\"",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"op\":\"add\",\r\n        \"path\":\"/isActiveOnEdge\",\r\n        \"value\":true\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{ADOBE_IO_ENV}}/data/core/ups/config/mergePolicies/:mergePolicyId",
											"protocol": "https",
											"host": [
												"{{ADOBE_IO_ENV}}"
											],
											"path": [
												"data",
												"core",
												"ups",
												"config",
												"mergePolicies",
												":mergePolicyId"
											],
											"variable": [
												{
													"key": "mergePolicyId",
													"value": "{{merge_policy_default_profile}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//test for successful api response",
											"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "02 - Audiences",
					"item": [
						{
							"name": "Any Event Streaming (within the hour)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//add segment hash to body",
											"const body = JSON.parse(pm.request.body.raw);",
											"const segment_hash = createhash(body[\"expression\"][\"value\"]);",
											"body.ansibleDataModel.hash = eval('\"' + segment_hash + '\"');",
											"pm.request.body.raw = body;",
											"",
											"//Generate segment hash",
											"function createhash(str) {",
											"    let hash = 0;",
											"    let i;",
											"    let chr;",
											"    if (str.length === 0) return hash;",
											"    for (i = 0; i < str.length; i++) {",
											"        chr = str.charCodeAt(i);",
											"        hash = ((hash << 5) - hash) + chr;",
											"        hash |= 0;",
											"    }",
											"    return hash;",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//set variable id_name\r",
											"const id_name = \"segment_id_any_event_streaming_within_the_hour\";\r",
											"const id_hash = \"segment_hash_any_event_streaming_within_the_hour\";\r",
											"\r",
											"//store collection variables\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(id_hash, data[\"ansibleDataModel\"][\"hash\"]), \r",
											"pm.collectionVariables.set(id_name, data[\"id\"]);\r",
											"\r",
											"\r",
											"//test for hash value on segment\r",
											"pm.test(\"Segment hash value successfully created and appended\", () => {\r",
											"  pm.expect(pm.collectionVariables.get(id_hash)).to.not.eql(null);\r",
											"});\r",
											"\r",
											"\r",
											"//test for collection variable value\r",
											"pm.test(\"Collection variable '\" + id_name + \"' successfully saved\", () => {\r",
											"    pm.expect(pm.collectionVariables.get(id_name)).to.not.eql(null);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
									},
									{
										"key": "x-api-key",
										"value": "acp_ui_ansible",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html)."
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{PREFIX_NAME}}: Any Event Streaming (within the hour)\",\r\n    \"profileInstanceId\": \"ups\",\r\n    \"description\": \"{{PREFIX_NAME}}: Any Event Streaming (within the hour)\",\r\n    \"expression\": {\r\n        \"format\": \"pql/json\",\r\n        \"value\": \"{\\\"nodeType\\\":\\\"chain\\\",\\\"array\\\":{\\\"nodeType\\\":\\\"fieldLookup\\\",\\\"fieldName\\\":\\\"xEvent\\\",\\\"object\\\":{\\\"nodeType\\\":\\\"parameterReference\\\",\\\"position\\\":1}},\\\"timestampField\\\":{\\\"nodeType\\\":\\\"lambda\\\",\\\"varNames\\\":[\\\"v0\\\"],\\\"body\\\":{\\\"nodeType\\\":\\\"fieldLookup\\\",\\\"fieldName\\\":\\\"timestamp\\\",\\\"object\\\":{\\\"nodeType\\\":\\\"varRef\\\",\\\"varName\\\":\\\"v0\\\"}}},\\\"elements\\\":[{\\\"nodeType\\\":\\\"element\\\",\\\"name\\\":\\\"C0\\\",\\\"negated\\\":false,\\\"what\\\":{\\\"nodeType\\\":\\\"lambda\\\",\\\"varNames\\\":[],\\\"body\\\":{\\\"nodeType\\\":\\\"literal\\\",\\\"literalType\\\":\\\"Boolean\\\",\\\"value\\\":true}},\\\"when\\\":{\\\"nodeType\\\":\\\"lambda\\\",\\\"varNames\\\":[\\\"v0\\\"],\\\"body\\\":{\\\"nodeType\\\":\\\"occurs\\\",\\\"timestamp\\\":{\\\"nodeType\\\":\\\"varRef\\\",\\\"varName\\\":\\\"v0\\\"},\\\"timeinterval\\\":{\\\"nodeType\\\":\\\"literal\\\",\\\"literalType\\\":\\\"Timestamp\\\",\\\"value\\\":\\\"now\\\"},\\\"relation\\\":{\\\"nodeType\\\":\\\"literal\\\",\\\"literalType\\\":\\\"TimeDirection\\\",\\\"value\\\":\\\"before\\\"},\\\"qualification\\\":{\\\"nodeType\\\":\\\"timeQualification\\\",\\\"duration\\\":{\\\"nodeType\\\":\\\"duration\\\",\\\"count\\\":{\\\"nodeType\\\":\\\"literal\\\",\\\"literalType\\\":\\\"Integer\\\",\\\"value\\\":1},\\\"unit\\\":{\\\"nodeType\\\":\\\"literal\\\",\\\"literalType\\\":\\\"TimeUnit\\\",\\\"value\\\":\\\"hours\\\"}},\\\"comparison\\\":{\\\"nodeType\\\":\\\"literal\\\",\\\"literalType\\\":\\\"Comparison\\\",\\\"value\\\":\\\"<=\\\"}}}}}]}\"\r\n    },\r\n    \"evaluationInfo\": {\r\n        \"continuous\": {\r\n            \"enabled\": true\r\n        }\r\n    },\r\n    \"schema\": {\r\n        \"name\": \"_xdm.context.profile\"\r\n    },\r\n    \"payloadSchema\": \"string\",\r\n    \"ttlInDays\": 30,\r\n    \"ansibleDataModel\": {\r\n        \"dataModel\": {\r\n            \"expression\": {\r\n                \"isValid\": true,\r\n                \"logicalOperator\": \"and\",\r\n                \"profileAttributesContainer\": {\r\n                    \"exclude\": false,\r\n                    \"items\": [],\r\n                    \"logicalOperator\": \"and\",\r\n                    \"itemType\": \"segmentContainer\"\r\n                },\r\n                \"xEventAttributesContainer\": {\r\n                    \"exclude\": false,\r\n                    \"items\": [\r\n                        {\r\n                            \"exclude\": false,\r\n                            \"items\": [\r\n                                {\r\n                                    \"container\": {\r\n                                        \"exclude\": false,\r\n                                        \"isPlaceholder\": false,\r\n                                        \"items\": [],\r\n                                        \"logicalOperator\": \"and\",\r\n                                        \"mapKey\": \"\",\r\n                                        \"multiValuedParentFriendlyName\": \"XDM ExperienceEvent\",\r\n                                        \"multiValuedParentsAllData\": [\r\n                                            {\r\n                                                \"id\": \"xEvent\",\r\n                                                \"xdmPathIds\": [\r\n                                                    \"xEvent\"\r\n                                                ]\r\n                                            }\r\n                                        ],\r\n                                        \"occurrenceCount\": 1,\r\n                                        \"occurrenceCountUpper\": 2,\r\n                                        \"occurrenceOperator\": \"atLeast\",\r\n                                        \"originalLocation\": [],\r\n                                        \"subType\": \"array\",\r\n                                        \"useAnyMapKey\": false,\r\n                                        \"variableRef\": {\r\n                                            \"friendlyName\": \"Any1\",\r\n                                            \"id\": \"F0611C4A-CB29-B09E-EA69-A4179538824F\",\r\n                                            \"isMapVariable\": false,\r\n                                            \"name\": \"_Any1\",\r\n                                            \"payloadExports\": [],\r\n                                            \"type\": \"event\",\r\n                                            \"itemType\": \"variable\"\r\n                                        },\r\n                                        \"xdmPathIds\": [\r\n                                            \"xEvent\"\r\n                                        ],\r\n                                        \"itemType\": \"multiValueParentContainer\"\r\n                                    },\r\n                                    \"eventType\": {\r\n                                        \"id\": \"__ansibleAnyEventType\",\r\n                                        \"__entity__\": true,\r\n                                        \"type\": \"n\"\r\n                                    },\r\n                                    \"id\": \"0D123A40-ABB9-8DCE-BE91-FEE6BAA53E33\",\r\n                                    \"itemType\": \"eventTypeCard\"\r\n                                }\r\n                            ],\r\n                            \"logicalOperator\": \"and\",\r\n                            \"itemType\": \"eventTypeCardContainer\"\r\n                        }\r\n                    ],\r\n                    \"logicalOperator\": \"then\",\r\n                    \"temporalConstraint\": {\r\n                        \"quantity\": 1,\r\n                        \"subType\": \"in-last-constraint\",\r\n                        \"type\": \"in-last\",\r\n                        \"unit\": \"hours\"\r\n                    },\r\n                    \"itemType\": \"eventTypeCardContainer\"\r\n                },\r\n                \"itemType\": \"segmentDefinition\"\r\n            }\r\n        },\r\n        \"version\": \"1.0.0\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ADOBE_IO_ENV}}/data/core/ups/segment/definitions",
									"protocol": "https",
									"host": [
										"{{ADOBE_IO_ENV}}"
									],
									"path": [
										"data",
										"core",
										"ups",
										"segment",
										"definitions"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//test for successful api response",
									"pm.test(\"Request name: '\" + pm.info.requestName + \"' succeeded\", () => {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "tenant_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "tenant_core_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "class_id_dep_store_lookup",
			"value": ""
		},
		{
			"key": "class_altid_dep_store_lookup",
			"value": ""
		},
		{
			"key": "fg_id_dep_customer",
			"value": ""
		},
		{
			"key": "fg_id_dep_plan_details",
			"value": ""
		},
		{
			"key": "fg_id_dep_customer_account_details",
			"value": ""
		},
		{
			"key": "fg_id_dep_active_line_details",
			"value": ""
		},
		{
			"key": "fg_id_dep_aggregates",
			"value": "",
			"type": "string"
		},
		{
			"key": "fg_id_dep_store_details",
			"value": "",
			"type": "string"
		},
		{
			"key": "fg_id_dep_product_details",
			"value": "",
			"type": "string"
		},
		{
			"key": "fg_id_dep_plan_metadata",
			"value": "",
			"type": "string"
		},
		{
			"key": "fg_id_dep_customer_metadata",
			"value": "",
			"type": "string"
		},
		{
			"key": "fg_id_dep_billing",
			"value": "",
			"type": "string"
		},
		{
			"key": "fg_id_dep_order_details_extended",
			"value": "",
			"type": "string"
		},
		{
			"key": "fg_id_dep_ecommerce_details_extended",
			"value": "",
			"type": "string"
		},
		{
			"key": "fg_id_dep_web",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_customer_account",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_customer_account",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_customer_active_lines",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_customer_active_lines",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_customer_aggregates",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_customer_aggregates",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_billing",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_billing",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_orders",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_orders",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_ecommerce",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_ecommerce",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_web",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_web",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_store_lookup",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_store_lookup",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_product_lookup",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_product_lookup",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_id_dep_plan_lookup",
			"value": "",
			"type": "string"
		},
		{
			"key": "schema_altid_dep_plan_lookup",
			"value": "",
			"type": "string"
		},
		{
			"key": "dataset_id_dep_customer_account",
			"value": ""
		},
		{
			"key": "dataset_id_dep_customer_active_lines",
			"value": ""
		},
		{
			"key": "dataset_id_dep_customer_aggregates",
			"value": ""
		},
		{
			"key": "dataset_id_dep_billing",
			"value": ""
		},
		{
			"key": "dataset_id_dep_orders",
			"value": ""
		},
		{
			"key": "dataset_id_dep_ecommerce",
			"value": ""
		},
		{
			"key": "dataset_id_dep_web",
			"value": ""
		},
		{
			"key": "dataset_id_dep_store_lookup",
			"value": ""
		},
		{
			"key": "dataset_id_dep_product_lookup",
			"value": "",
			"type": "string"
		},
		{
			"key": "dataset_id_dep_plan_lookup",
			"value": ""
		},
		{
			"key": "aep_cloud_storage_spec_id",
			"value": ""
		},
		{
			"key": "merge_policy_default_profile",
			"value": ""
		},
		{
			"key": "segment_hash_any_event_streaming_within_the_hour",
			"value": ""
		},
		{
			"key": "segment_id_any_event_streaming_within_the_hour",
			"value": ""
		},
		{
			"key": "segment_job_id",
			"value": ""
		},
		{
			"key": "aep_cloud_storage_con_spec_id",
			"value": ""
		},
		{
			"key": "source_account_id_http_api",
			"value": ""
		},
		{
			"key": "source_account_inlet_http_api",
			"value": "",
			"type": "string"
		},
		{
			"key": "source_conn_id_http_api_dep_cus_acc",
			"value": "",
			"type": "string"
		},
		{
			"key": "target_conn_id_http_api_dep_cus_acc",
			"value": "",
			"type": "string"
		},
		{
			"key": "map_set_id_http_api_dep_cus_acc",
			"value": "",
			"type": "string"
		},
		{
			"key": "sflow_id_http_api_dep_cus_acc",
			"value": ""
		},
		{
			"key": "source_conn_id_http_api_dep_cus_act_lines",
			"value": "",
			"type": "string"
		},
		{
			"key": "target_conn_id_http_api_dep_cus_act_lines",
			"value": "",
			"type": "string"
		},
		{
			"key": "map_set_id_http_api_dep_cus_act_lines",
			"value": "",
			"type": "string"
		},
		{
			"key": "sflow_id_http_api_dep_cus_act_lines",
			"value": "",
			"type": "string"
		},
		{
			"key": "source_conn_id_http_api_dep_cus_agg",
			"value": ""
		},
		{
			"key": "target_conn_id_http_api_dep_cus_agg",
			"value": ""
		},
		{
			"key": "map_set_id_http_api_dep_cus_agg",
			"value": ""
		},
		{
			"key": "sflow_id_http_api_dep_cus_agg",
			"value": ""
		},
		{
			"key": "source_conn_id_http_api_dep_billing",
			"value": ""
		},
		{
			"key": "target_conn_id_http_api_dep_billing",
			"value": ""
		},
		{
			"key": "map_set_id_http_api_dep_billing",
			"value": ""
		},
		{
			"key": "sflow_id_http_api_dep_billing",
			"value": ""
		},
		{
			"key": "target_conn_id_http_api_dep_orders",
			"value": ""
		},
		{
			"key": "map_set_id_http_api_dep_orders",
			"value": ""
		},
		{
			"key": "sflow_id_http_api_dep_orders",
			"value": ""
		},
		{
			"key": "source_conn_id_http_api_dep_orders",
			"value": ""
		},
		{
			"key": "source_conn_id_http_api_dep_ecommerce",
			"value": ""
		},
		{
			"key": "target_conn_id_http_api_dep_ecommerce",
			"value": ""
		},
		{
			"key": "map_set_id_http_api_dep_ecommerce",
			"value": ""
		},
		{
			"key": "sflow_id_http_api_dep_ecommerce",
			"value": ""
		},
		{
			"key": "source_conn_id_http_api_dep_web",
			"value": ""
		},
		{
			"key": "target_conn_id_http_api_dep_web",
			"value": ""
		},
		{
			"key": "map_set_id_http_api_dep_web",
			"value": ""
		},
		{
			"key": "sflow_id_http_api_dep_web",
			"value": ""
		},
		{
			"key": "source_conn_id_http_api_dep_store_lookup",
			"value": ""
		},
		{
			"key": "target_conn_id_http_api_dep_store_lookup",
			"value": ""
		},
		{
			"key": "map_set_id_http_api_dep_store_lookup",
			"value": ""
		},
		{
			"key": "sflow_id_http_api_dep_store_lookup",
			"value": ""
		},
		{
			"key": "source_conn_id_http_api_dep_plan_lookup",
			"value": ""
		},
		{
			"key": "target_conn_id_http_api_dep_plan_lookup",
			"value": ""
		},
		{
			"key": "map_set_id_http_api_dep_plan_lookup",
			"value": ""
		},
		{
			"key": "sflow_id_http_api_dep_plan_lookup",
			"value": ""
		},
		{
			"key": "source_conn_id_http_api_dep_product_lookup",
			"value": ""
		},
		{
			"key": "target_conn_id_http_api_dep_product_lookup",
			"value": ""
		},
		{
			"key": "map_set_id_http_api_dep_product_lookup",
			"value": ""
		},
		{
			"key": "sflow_id_http_api_dep_product_lookup",
			"value": ""
		},
		{
			"key": "flow_loop_count",
			"value": "0",
			"type": "string"
		}
	]
}